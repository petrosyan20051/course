// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace gui.Models;

public partial class KRContext : DbContext
{
    public KRContext(DbContextOptions<KRContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Driver> Drivers { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<Rate> Rates { get; set; }

    public virtual DbSet<Route> Routes { get; set; }

    public virtual DbSet<TransportVehicle> TransportVehicles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Customer>(entity =>
        {
            entity.Property(e => e.Email).IsRequired();
            entity.Property(e => e.Forename).IsRequired();
            entity.Property(e => e.IsDeleted).HasColumnName("isDeleted");
            entity.Property(e => e.PhoneNumber).IsRequired();
            entity.Property(e => e.Surname).IsRequired();
            entity.Property(e => e.WhoAdded).IsRequired();
        });

        modelBuilder.Entity<Driver>(entity =>
        {
            entity.Property(e => e.DriverLicenceNumber).IsRequired();
            entity.Property(e => e.DriverLicenceSeries).IsRequired();
            entity.Property(e => e.Forename).IsRequired();
            entity.Property(e => e.IsDeleted).HasColumnName("isDeleted");
            entity.Property(e => e.PhoneNumber).IsRequired();
            entity.Property(e => e.Surname).IsRequired();
            entity.Property(e => e.WhoAdded).IsRequired();
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.Property(e => e.IsDeleted).HasColumnName("isDeleted");
            entity.Property(e => e.WhoAdded).IsRequired();
        });

        modelBuilder.Entity<Rate>(entity =>
        {
            entity.Property(e => e.Forename).IsRequired();
            entity.Property(e => e.IsDeleted).HasColumnName("isDeleted");
            entity.Property(e => e.WhoAdded).IsRequired();
        });

        modelBuilder.Entity<Route>(entity =>
        {
            entity.Property(e => e.BoardingAddress).IsRequired();
            entity.Property(e => e.DropAddress).IsRequired();
            entity.Property(e => e.IsDeleted).HasColumnName("isDeleted");
            entity.Property(e => e.WhoAdded).IsRequired();
        });

        modelBuilder.Entity<TransportVehicle>(entity =>
        {
            entity.Property(e => e.Color).IsRequired();
            entity.Property(e => e.IsDeleted).HasColumnName("isDeleted");
            entity.Property(e => e.Model).IsRequired();
            entity.Property(e => e.Number).IsRequired();
            entity.Property(e => e.ReleaseYear).IsRequired();
            entity.Property(e => e.Series).IsRequired();
            entity.Property(e => e.WhoAdded).IsRequired();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}